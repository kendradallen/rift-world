@model RiftWorld.DATA.EF.Character

@{
    ViewBag.Title = "Hub";
    string status = "";
    if (Model.IsDead)
    {
        status = "dead";
    }
    else if (Model.IsRetired)
    {
        status = "retired";
    }
}
@section styles{
    <style>
        .tablink-a, .tablink-b {
            background-color: #555;
            color: white;
            float: left;
            border: none;
            outline: none;
            cursor: pointer;
            padding: 14px 16px;
            font-size: 17px;
            width: 15%;
        }
        .tablink {
            padding: 11px 16px;
            font-size: 20px;
        }

            .tablink-a:hover, .tablink-b {
                background-color: #777;
            }

        /* Style the tab content (and add height:100% for full page content) */
        .tabcontent-a, tabcontent-b {
            /*color: white;*/
            display: none;
            padding: 75px 0px;
            /*height: 100%;*/
            animation: fadeEffect 1s;
        }
    </style>
}
    <div class="col-12">

        <h2>Hub</h2>
        @if (Model.IsRequestingRetire)
        {
            <div class="alert alert-danger" role="alert">You are currently requesting to retire this character.</div>
        }
        @*<div class="row">
            <button class="tablink-a col-sm-12 col-md" onclick="openPage('details', this, 'green')" id="defaultOpen">Details</button>
            <button class="tablink-a col-sm-12 col-md" onclick="openPage('journals', this, 'green')">Journals</button>
            <button class="tablink-a col-sm-12 col-md" onclick="openPage('underApproval', this, 'green')">Under Approval</button>
            <button class="tablink-a col-sm-12 col-md" onclick="openPage('tab-orgs', this, 'green')">Orgs</button>
            <button class="tablink-a col-sm-12 col-md" onclick="openPage('KnownSecrets', this, 'green')">Known Secrets</button>
        </div>*@
        <div class="row" id="daButtons">
            <button class="tablink col-sm-12 col-md active" data-open="details">Details</button>
            <button class="tablink col-sm-12 col-md" data-open="journals">Journals</button>
            <button class="tablink col-sm-12 col-md" data-open="underApproval">Under Approval</button>
            <button class="tablink col-sm-12 col-md" data-open="tab-orgs">Orgs</button>
            <button class="tablink col-sm-12 col-md" data-open="KnownSecrets">Known Secrets</button>
        </div>

        @Html.Action("_Secrets", "Hub", new { id = Model.CharacterId })
        @Html.Action("_JournalLog", "Hub", new { id = Model.CharacterId })
        @Html.Action("_Orgs", "Hub", new { id = Model.CharacterId })

        @Html.Action("_UnderApproval", "Hub", new { id = Model.CharacterId })


        <div class="tabcontent-a" id="details">
            <h3>Character</h3>
            <div class="row">
                <div class="col-12 col-md">
                    @Html.ActionLink("Edit", "Edit", "Characters", new { id = Model.CharacterId }, new { @class = "btn btn-warning btn-block" })
                </div>
                <div class="col-12 col-md">
                    @Html.ActionLink("Update Current Location", "ChangeLocation", "Hub", null, new { @class = "btn btn-info btn-block" })
                </div>
                <div class="col-12 col-md">
                    @if (!Model.IsRequestingRetire)
                    {
                        @Html.ActionLink("Request to Retire Character", "RequestRetire", "Hub", null, new { @class = "btn btn-danger btn-block" })
                    }
                    else
                    {
                        @Html.ActionLink("Cancel Retiring Character", "CancelRetireRequest", "Hub", null, new { @class = "btn btn-success btn-block" })
                    }
                </div>
            </div>
            <hr />
            <section id="start" class="col-12" name="The Basics">
                <div id="startTop" class="row">
                    @if (Model.PortraitFileName != null)
                    {
                        <div id="startTop-left_character" class="col-md-3 align-self-center">
                            <div id="picture" class="@status">
                                <div class="padder">
                                    <img src="~/Content/img/character/@Model.PortraitFileName" />
                                    <div class="overlay char">Art by @Model.Artist</div>
                                </div>
                            </div>
                        </div>
                    }
                    <div id="startTop-right_character" class="@(Model.PortraitFileName != null ? "col-md-9" : "col-12")">
                        <div class="row">
                            <div id="name_character" class="col-md-12">
                                @Html.DisplayFor(model => model.CharacterName)
                            </div>
                        </div>
                        <div class="col-12 begin">
                            <div class="row chara-space topper">
                                <div class="col-auto">
                                    <span class="dt">@Html.DisplayNameFor(model => model.RaceId):</span> @Html.DisplayFor(model => model.Race.RaceName)
                                </div>
                                <div class="col-auto divider">
                                    |
                                </div>
                                <div class="col-auto end">
                                    <span class="dt">@Html.DisplayNameFor(model => model.GenderId):</span>
                                    @if (Model.Gender.GenderName == "Wildmagic Incarnate")
                                    {
                                        <span style="color: red;">W</span>
                                        <span style="color: orange;">i</span>
                                        <span style="color: gold;">l</span>
                                        <span style="color: green;">d</span>
                                        <span style="color: blue;">m</span>
                                        <span style="color: indigo;">a</span>
                                        <span style="color: purple;">g</span>
                                        <span style="color: red;">i</span>
                                        <span style="color: orange;">c &nbsp;</span>
                                        <span style="color: gold;">I</span>
                                        <span style="color: green;">n</span>
                                        <span style="color: blue;">c</span>
                                        <span style="color: indigo;">a</span>
                                        <span style="color: purple;">r</span>
                                        <span style="color: red;">n</span>
                                        <span style="color: orange;">a</span>
                                        <span style="color: gold;">t</span>
                                        <span style="color: green;">e</span>
                                    }
                                    else
                                    {
                                        @Model.Gender.GenderName
                                    }
                                </div>
                            </div>
                            <div class=" row chara-space">
                                <div class="col-auto">
                                    <span class="dt">@Html.DisplayNameFor(model => model.ClassString):</span> @Html.DisplayFor(model => model.ClassString)
                                </div>
                                <div class="col-auto divider">
                                    |
                                </div>
                                <div class="col-auto end">
                                    <span class="dt">@Html.DisplayNameFor(model => model.TierId):</span> @Html.DisplayFor(model => model.Tier.TierName)
                                </div>
                            </div>
                            <div class="row chara-space">
                                <div class="col-auto" style="font-size:1.4em;">
                                    <span class="dt">@Html.DisplayNameFor(model => model.CurrentLocationId):</span> @Html.DisplayFor(model => model.Locale.Name)
                                </div>
                            </div>
                            <footer class="row chara-space ooc">
                                <div class="col-auto">
                                    <span class="dt">Portrayed by:</span> @(Model.IsPlayerDemo ? Html.DisplayFor(model => model.BackupPortrayerName) : Html.DisplayFor(model => model.UserDetail.DiscordFull))
                                </div>
                                <div class="col-auto">
                                    <span class="dt">Status:</span> @Html.DisplayFor(model => model.Status)
                                </div>
                            </footer>

                        </div>
                    </div>
                </div>
            </section>
            <section id="description" class="col-12" name="Description">
                <h2 class="line chara">
                    @Html.DisplayNameFor(model => model.Description)
                </h2>
                <pre>@Html.DisplayFor(model => model.Description)</pre>
            </section>
            <section id="about" class="col-12" name="About">
                <h2 class="line chara">
                    @Html.DisplayNameFor(model => model.About)
                </h2>
                <pre>@Html.DisplayFor(model => model.About)</pre>
            </section>
        </div>

    </div>
@section Scripts{
    <script>
        $('#daButtons button').click(function () {
            var value = $(this).data("open");
            tabcontent = document.getElementsByClassName("tabcontent-a");
            for (i = 0; i < tabcontent.length; i++) {
                tabcontent[i].style.display = "none";
            }
            document.getElementById(value).style.display = "block";
            if (value == "underApproval") {
                document.getElementById("bRumors").style.display = "none";
                document.getElementById("bJournals").style.display = "none";
                document.getElementById("bOrgs").style.display = "none";
            }
            $("#daButtons .active").removeClass('active');
            $(this).addClass('active');
        });
        $(document).ready(function () {
            $('#daButtons .active').click();
        });
    </script>
    <script>
        function openPage(pageName, elmnt, color) {
            // Hide all elements with class="tabcontent" by default */
            var i, tabcontent, tablinks;
            tabcontent = document.getElementsByClassName("tabcontent-a");
            for (i = 0; i < tabcontent.length; i++) {
                tabcontent[i].style.display = "none";
            }

            // Remove the background color of all tablinks/buttons
            tablinks = document.getElementsByClassName("tablink-a");
            for (i = 0; i < tablinks.length; i++) {
                tablinks[i].style.backgroundColor = "";
            }

            // Show the specific tab content
            document.getElementById(pageName).style.display = "block";

            // Add the specific color to the button used to open the tab content
            elmnt.style.backgroundColor = color;

            //hide the content from under approval again
            if (pageName == "underApproval") {
                document.getElementById("bRumors").style.display = "none";
                document.getElementById("bJournals").style.display = "none";
                document.getElementById("bOrgs").style.display = "none";
            }
        }

        // Get the element with id="defaultOpen" and click on it
        document.getElementById("defaultOpen").click();
    </script>
    <script>
        function openPageB(pageName, elmnt, color) {
            // Hide all elements with class="tabcontent" by default */
            var i, tabcontent, tablinks;
            tabcontent = document.getElementsByClassName("tabcontent-b");
            for (i = 0; i < tabcontent.length; i++) {
                tabcontent[i].style.display = "none";
            }

            // Remove the background color of all tablinks/buttons
            tablinks = document.getElementsByClassName("tablink-b");
            for (i = 0; i < tablinks.length; i++) {
                tablinks[i].style.backgroundColor = "";
            }

            // Show the specific tab content
            document.getElementById(pageName).style.display = "block";

            // Add the specific color to the button used to open the tab content
            elmnt.style.backgroundColor = color;
        }

            //// Get the element with id="defaultOpen" and click on it
            //document.getElementById("defaultOpen").click();
    </script>
}