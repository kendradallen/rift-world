@model RiftWorld.UI.MVC.Models.AssociationWork_Full
    @using RiftWorld.DATA.EF;

@{
    RiftWorldEntities db = new RiftWorldEntities();
    List<Org> orgs = db.Orgs.ToList();
    ViewBag.Title = "Test";
    ViewBag.Orgs = orgs;
}


@section styles{
    <link rel="stylesheet" href="~/Content/SelectBoxes/multi.css" />
}
    <div class="col">
        <h2>Test</h2>

        @using (Html.BeginForm("", "", FormMethod.Post, new { id = "daForm" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>TesterVM</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @Value = "Kendra", data_test = "this" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <select multiple="multiple" name="AssociationOptions" id="AssociationOptions">
                    @foreach (var o in ViewBag.Orgs)
                    {
                        <option value="@o.OrgId">@o.Name</option>//DO NOT try to expand this out with enters. It royally fucks up the styling. it must remain inline with no spacing as is presented here
                    }
                </select>


                @*<select multiple="multiple" name="AssociationOptions" id="AssociationOptions">
                    @foreach (var a in Model.AssociationOptions)
                    {
                        <option value="@a.Value">@a.Text</option>//DO NOT try to expand this out with enters. It royally fucks up the styling. it must remain inline with no spacing as is presented here
                    }
                </select>*@

                @*<select multiple="multiple" name="AssociationOptions" id="AssociationOptions">
                    <option id="2">Python</option>
                    <option id="1">Snake</option>
                </select>*@

                @*<div id="otherStuff">
                    @foreach (var a in Model.AssociationOptions)
                    {
                        <div data-value="@a.Value" style="display:none">
                            <input type="number" data-value="@a.Value" data-name="order" />
                        </div>
                    }
                </div>*@

                <div id="otherStuff">
                    @foreach (var o in orgs)
                    {
                        <div data-value="@o.OrgId" style="display:none">
                            <input type="number" data-value="@o.OrgId" data-name="order" />
                        </div>
                    }
                </div>

                @*<div id="orgs" class="form-group">
                    <div class="selected-wrapper ">
                        <div>
                            <a tabindex="0" class="item selected" role="button" data-value="Python" data-associated="2" multi-index="0">Python</a>
                            <input type="number" data-associated="2" data-name="order" name="order" value="3"/>
                        </div>
                        <a tabindex="0" class="item selected" role="button" data-value="Snake" data-associated="1" multi-index="1">Snake</a>
                        <input type="number" data-associated="1" data-name="order" name="order" value="5"/>

                    </div>

                </div>*@

                <br />
                <br />
                <br />
                <br />
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input id="submit" type="button" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div id="button" type="button" class="btn-normal">TEST</div>

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
            <script src="~/Scripts/SelectBoxes/multi.js"></script>

            <script>
                $("#AssociationOptions").multi({
                    enable_search: true,
                    search_placeholder: "search..."
                });
            </script>

            @*<script>
                $(document).ready(function () {
                    $(".selected-wrapper a").on("click", function (e) {
                        e.preventDefault();
                        var target = $(this).data("value");
                        console.log("fired");

                        $('div[data-value="' + target + '"]').toggle();

                    });
                });
            </script>*@

            <script>
                //function reveal(o_id) {

                //}
                function on_click(thing) {
                    console.log("fired");
                    console.log(thing);
                    $('div[data-value="' + thing + '"]').toggle();
                    //$("#otherStuff").toggle();


                }

                //var selected - document.crea
                //$(document).ready(function () {

                //});
            </script>
            <script>
        //var theLength = $(".selected-wrapper a").length;
        function TheSubmitted(name, associations) {
            this.Name = name;
            this.Associations = associations;
        }
        function TheRealSubmit(name, associations, associationOptions) {
            this.Name = name;
            this.Associations = associations;
            this.AssociationOptions = associationOptions;
        }
        function Association(orgId, order) {
            this.orgId = orgId;
            this.order = order;
        }

        //var length = $(".selected-wrapper a").length;

        //Note: this is an action on the act of clicking the submit button (not on the act of submitting the form)
        $("#submit").on("click", function (e) {
            e.preventDefault();
            //console.log(theLength);
            //var foo = new AssociationArray
            var postData = [];
            $(function () {
                $(".selected-wrapper a").each(function () {
                    var target = $(this).data("value");
                    //console.log(target);
                    var order = $('[data-value="' + target + '"][data-name="order"]').val();
                    //console.log(order);
                    postData.push(new Association(target, order));
                    //console.log(postData);
                })

                ////////////////////God I'm dumb. Kay so future me, remember, JS is asynchronous. Stuff can run in not the the right order. Unless you tell it otherwise, anything can run before the needed data is there.
                ///////////////////Also, I'm know there is a cleaner way to do it with promises and such but the time crunch is currently preventing me from trying to learn that at the same time. So, the rest of this code will be in a far more crude and bodge-y like fashion
                var name = $("#Name").val();
                var formData = new TheSubmitted(name, postData);
                var formDataAnew = JSON.stringify(formData);
                console.log(formData);
                console.log(formDataAnew);

                var options = $("#AssociationOptions").val();
                console.log("it's a me " + options);
                var realFormData = new TheRealSubmit(name, postData, options)

                $.ajax({
                    url: "@Url.Action("Test2","NPCs")",
                    type: "POST",
                    data: realFormData,
                    dataType: "json"
                })
            });
        })


            </script>
        </div>

}

