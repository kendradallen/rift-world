
@model RiftWorld.UI.MVC.Models.RumorCreateVM
<div id="make-rumor">

    @if (Request.IsAuthenticated && Model.AuthorId != null)
    {
        using (Html.BeginForm("CreateRumor", "Rumors", FormMethod.Post, new { id = "RumorCreateForm" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.RumorOfId)
            @Html.HiddenFor(model => model.AuthorId)
            @Html.HiddenFor(model => model.IsApproved)
            <div class="form-horizontal">
                <div class="form-group mb-0">
                    @Html.Label("RumorText", "Whisper your words....", htmlAttributes: new { @class = "control-label" })
                    <div class="col-12">
                        <div class="da-focus">
                            @Html.Editor("RumorText", new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                        @Html.ValidationMessage("RumorText", "", new { @class = "text-danger" })
                        <div id="tcp-Rumor" class="col-md-offset-2 col-md-10"><span id="tc-Rumor">300</span> character(s) left.</div>
                    </div>
                </div>

                <div class="form-group row justify-content-end">
                    <div class="col-md-offset-2 col-auto btn-signature pt-0">
                        <input id="daSubmit" type="submit" value="Whisper" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

    }
    else if (Request.IsAuthenticated && Model.AuthorId == null)
    {
        <p class="centered">You need to have an active, approved character to make a rumor.</p> 
    }
    else
    {
        <p class="centered"> @Html.ActionLink("Log in", "Login", "Account", routeValues: new { returnUrl = Request.Url.AbsolutePath + "#make-rumor"}, htmlAttributes: null ) to write a rumor! </p>
    }
</div>
<div id="MessageDisplayRu" class="row justify-content-center">
    <div id="MessageContentRu" class="col-auto">
    </div>
</div>