@using Microsoft.AspNet.Identity
@using RiftWorld.DATA.EF; @* added for domain models & db access (specifically to user details) *@
@if (Request.IsAuthenticated)
{
    //grabbing the other table's user information
    RiftWorldEntities db = new RiftWorldEntities();
    string userId = User.Identity.GetUserId();
    UserDetail currentUser = db.UserDetails.Where(u => u.UserId == userId).FirstOrDefault();
    string charName;
    string discordName = "future hero";
    short? charId;
    int pendingStuff = db.Rumors.Where(i => i.IsApproved == false).Count() + db.Characters.Where(c => c.IsApproved == false || c.HasUnseenEdit || c.IsRequestingRetire).Count() + db.Journals.Where(j => j.IsApproved == false || j.HasUnseenEdit).Count();
    int onlyAdmin = db.UserDetails.Where(i => i.IsApproved == false).Count() + db.CharOrgs.Where(o=>!o.KatherineApproved).Count();
    int todo = db.Infos.Where(i => !i.IsPublished).Count();
    if (User.IsInRole("Admin"))
    {
        discordName = "Katherine";
    }
    else
    {
        discordName = currentUser.DiscordFull;
    }
    if (currentUser.CurrentCharacterId != null)
    {
        charId = (short)currentUser.CurrentCharacterId;
        charName = db.Characters.Where(c => c.CharacterId == charId).Select(c => c.CharacterName).FirstOrDefault();
    }
    else
    {
        charId = null;
        charName = null;
    }

    using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm", @class = "navbar-right" }))
    {
        @Html.AntiForgeryToken()

<ul @*class="nav navbar-nav navbar-right"*@>
    @if (Request.IsAuthenticated && User.IsInRole("Character"))
    {
        <li><a href="@Url.Action("Create", "Journals")">Journal <i class="fas fa-feather-alt"></i></a></li>
        <li><a href="@Url.Action("Index", "Hub")">Character</a></li>
    }
    else if (Request.IsAuthenticated && User.IsInRole("Admin"))
    {
        <li><a href="@Url.Action("CreateWhat", "Infos")">Create New</a></li>
        <li><a href="@Url.Action("Todo", "Infos")">Todo <span class="badge badge-pill badge-warning">@todo</span></a></li>
        <li>
            <a href="@Url.Action("Approvals", "Infos")">Approvals</a> <span class="badge badge-pill badge-info">@pendingStuff</span> @if (onlyAdmin > 0)
            {<span class="badge badge-pill badge-danger">@onlyAdmin</span>}
        </li>
    }
    else if (Request.IsAuthenticated && (User.IsInRole("Player") || User.IsInRole("Mod")))
    {
        <li><a href="@Url.Action("Create", "Characters")">Create Character</a></li>
    }
    @if (Request.IsAuthenticated && User.IsInRole("Mod"))
    {
        <li><a href="@Url.Action("Approvals", "Infos")">Approvals</a> <span class="badge badge-pill badge-info">@pendingStuff</span></li>
    }
    <li>@Html.ActionLink("Profile", "Index", "Manage", routeValues: null, htmlAttributes: new { title = "Manage" })</li>
    <li>
        <span style="cursor:default;color:unset; font-size:unset;">Hi @(!charName.IsEmpty() ? charName : discordName)!</span>
    </li>
    <li><a href="javascript:document.getElementById('logoutForm').submit()">Log off</a></li>
</ul>
    }
}

else
{
    <ul @*class="nav navbar-nav navbar-right"*@>
        <li>@Html.ActionLink("Register", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })</li>
        <li>@Html.ActionLink("Log in", "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>
    </ul>
}
