@model RiftWorld.DATA.EF.Story

@{
    ViewBag.Title = "Create";
}

<div class="col-12">
    <h2>Create</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Story</h4>
        <hr />
        @Html.HiddenFor(model => model.DateTold)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.IsAboutId, "IsAboutId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IsAboutId", null, htmlAttributes: new { @class = "" })
                @Html.ValidationMessageFor(model => model.IsAboutId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CommissionedBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CommissionedBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CommissionedBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsCannon, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsCannon)
                    @Html.ValidationMessageFor(model => model.IsCannon, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TheContent, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TheContent, new { htmlAttributes = new { @class = "form-control rich" } })
                @Html.ValidationMessageFor(model => model.TheContent, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-2" for="tags">Tags</label>
            @Html.ListBox("tags", (MultiSelectList)ViewBag.Tags)
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
    }

    <div>
        @Html.ActionLink("Back to Create New", "CreateWhat", "Infos")
    </div>
</div>
@section Scripts{
    <script>
        type = "text/javascript" >
            tinymce.init({
                selector: '.rich'
            });
    </script>
    <script>
        new SlimSelect({
            select: '#IsAboutId'
        })
        new SlimSelect({
            select: '#tags'
        })

    </script>
}