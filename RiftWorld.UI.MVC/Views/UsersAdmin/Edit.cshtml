@model RiftWorld.UI.MVC.Models.EditUserViewModel3

@{
    ViewBag.Title = "Edit User";
}

<div class="col-12">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Edit User</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.CurrentCharacterId)

        <div class="form-group row">
            @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="da-focus">
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                </div>
                @Html.ValidationMessageFor(model => model.Email)
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Roles", new { @class = "control-label col-md-2" })
            <span class=" col-md-10">
                @foreach (var item in Model.RolesList)
                {
                    <input type="checkbox" name="SelectedRole" value="@item.Value" checked="@item.Selected" class="checkbox-inline" />
                    @Html.Label(item.Value, new { @class = "control-label" })
                }
            </span>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.DiscordName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="da-focus">
                    @Html.EditorFor(model => model.DiscordName, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                @Html.ValidationMessageFor(model => model.DiscordName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.DiscordDiscriminator, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="da-focus">
                    @Html.EditorFor(model => model.DiscordDiscriminator, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                @Html.ValidationMessageFor(model => model.DiscordDiscriminator, "", new { @class = "text-danger" })
            </div>
            @Html.DisplayFor(model => model.DiscordDiscriminator)
        </div>

        @if (ViewBag.CurrentCharacter != null)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.CurrentCharacterId, htmlAttributes: new { @class = "control-label" })
                <div class="col-12">
                    @ViewBag.CurrentCharacter
                </div>
            </div>
        }
        @if (ViewBag.PastCharacters.Count > 0)
        {
            <div class="form-group">
                <label for="pastCharacters">Past Characters</label>
                <ul name="pastCharacters">
                    @foreach (string character in ViewBag.PastCharacters)
                    {
                        <li>@character</li>
                    }
                </ul>
            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.ConsentFileName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.ConsentFileName)

                @if (Model.ConsentFileName != null)
                {
                    <h5>Current Consent File</h5>
                    <iframe src="~/Content/ConsentFiles/@Model.ConsentFileName" width="100%" height="500px"></iframe>
                }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
